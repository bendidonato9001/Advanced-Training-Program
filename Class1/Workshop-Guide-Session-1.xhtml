<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><!--This file was converted to xhtml by OpenOffice.org - see http://xml.openoffice.org/odf2xhtml for more info.--><head profile="http://dublincore.org/documents/dcmi-terms/"><meta http-equiv="Content-Type" content="application/xhtml+xml; charset=utf-8"/><title xml:lang="en-US">- no title specified</title><meta name="DCTERMS.title" content="" xml:lang="en-US"/><meta name="DCTERMS.language" content="en-US" scheme="DCTERMS.RFC4646"/><meta name="DCTERMS.source" content="http://xml.openoffice.org/odf2xhtml"/><meta name="DCTERMS.creator" content="Ben Dale"/><meta name="DCTERMS.issued" content="2016-07-14T23:25:38.44" scheme="DCTERMS.W3CDTF"/><meta name="DCTERMS.contributor" content="Ben Dale"/><meta name="DCTERMS.modified" content="2016-10-07T17:15:49.76" scheme="DCTERMS.W3CDTF"/><meta name="DCTERMS.provenance" content="" xml:lang="en-US"/><meta name="DCTERMS.subject" content="," xml:lang="en-US"/><link rel="schema.DC" href="http://purl.org/dc/elements/1.1/" hreflang="en"/><link rel="schema.DCTERMS" href="http://purl.org/dc/terms/" hreflang="en"/><link rel="schema.DCTYPE" href="http://purl.org/dc/dcmitype/" hreflang="en"/><link rel="schema.DCAM" href="http://purl.org/dc/dcam/" hreflang="en"/><style type="text/css">
	@page {  }
	table { border-collapse:collapse; border-spacing:0; empty-cells:show }
	td, th { vertical-align:top; font-size:12pt;}
	h1, h2, h3, h4, h5, h6 { clear:both }
	ol, ul { margin:0; padding:0;}
	li { list-style: none; margin:0; padding:0;}
	<!-- "li span.odfLiEnd" - IE 7 issue-->
	li span. { clear: both; line-height:0; width:0; height:0; margin:0; padding:0; }
	span.footnodeNumber { padding-right:1em; }
	span.annotation_style_by_filter { font-size:95%; font-family:Arial; background-color:#fff000;  margin:0; border:0; padding:0;  }
	* { margin:0;}
	.P1 { font-size:12pt; font-family:Times New Roman; writing-mode:page; text-align:left ! important; }
	.P10 { font-size:12pt; font-family:Times New Roman; writing-mode:page; text-align:left ! important; background-color:#66ff99; }
	.P11 { font-size:12pt; font-family:Times New Roman; writing-mode:page; text-align:left ! important; background-color:#ff99ff; font-weight:normal; }
	.P13 { font-size:12pt; font-family:Times New Roman; writing-mode:page; text-align:left ! important; font-weight:normal; }
	.P2 { font-size:12pt; font-family:Times New Roman; writing-mode:page; text-align:left ! important; font-weight:bold; }
	.P3 { font-size:12pt; font-family:Times New Roman; writing-mode:page; text-align:center ! important; font-weight:bold; }
	.P4 { font-size:12pt; font-family:Times New Roman; writing-mode:page; text-align:left ! important; font-weight:normal; }
	.P5 { font-size:16pt; font-family:Times New Roman; writing-mode:page; }
	.P6 { font-size:16pt; font-family:Times New Roman; writing-mode:page; text-align:center ! important; }
	.P7 { font-size:12pt; font-family:Times New Roman; writing-mode:page; background-color:#999999; }
	.P8 { font-size:12pt; font-family:Times New Roman; writing-mode:page; text-align:left ! important; background-color:#999999; font-weight:normal; }
	.P9_borderStart { font-size:12pt; margin-top:0in; font-family:Times New Roman; writing-mode:page; text-align:left ! important; background-color:#999999; color:#000000; letter-spacing:normal; font-style:normal; font-weight:normal; padding-bottom:0in;  border-bottom-style:none; }
	.P9 { font-size:12pt; font-family:Times New Roman; writing-mode:page; text-align:left ! important; background-color:#999999; color:#000000; letter-spacing:normal; font-style:normal; font-weight:normal; padding-bottom:0in; padding-top:0in;  border-top-style:none; border-bottom-style:none; }
	.P9_borderEnd { font-size:12pt; margin-bottom:0in; font-family:Times New Roman; writing-mode:page; text-align:left ! important; background-color:#999999; color:#000000; letter-spacing:normal; font-style:normal; font-weight:normal; padding-top:0in;  border-top-style:none;}
	.Standard { font-size:12pt; font-family:Times New Roman; writing-mode:page; }
	.Internet_20_link { color:#000080; text-decoration:underline; }
	.T1 { font-weight:normal; }
	.T2 { color:#000000; font-family:Times New Roman; font-size:12pt; letter-spacing:normal; font-style:normal; }
	<!-- ODF styles with no properties representable as CSS -->
	.Numbering_20_Symbols { }
	</style></head><body dir="ltr" style="max-width:8.5in;margin-top:0.7874in; margin-bottom:0.7874in; margin-left:0.7874in; margin-right:0.7874in; "><p class="P5"> </p><p class="P6">Intelligent Systems Club:</p><p class="P6">Rpi Workshop</p><p class="P6">Session 1:</p><p class="P3"> </p><p class="P2">Setup</p><ol><li><p class="P13" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0cm">1.</span>Setup Windows for remote connection by going to: Control Panel → Network and Sharing Center → Change Adapter Settings → Right Click “Wifi” → Properties → “Sharing” tab → Check “Allow other network users...” → OK<span class="odfLiEnd"/> </p></li><li><p class="P13" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0cm">2.</span>Install WinSCP by running exe. Choose “Commander” in setup.<span class="odfLiEnd"/> </p></li><li><p class="P13" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0cm">3.</span>Install Netbeans from <a href="https://netbeans.org/downloads/" class="Internet_20_link">here</a>, make sure to select under the C/C++ column.<span class="odfLiEnd"/> </p></li><li><p class="P13" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0cm">4.</span>Install TightVnc from <a href="http://www.tightvnc.com/download.php" class="Internet_20_link">here</a><span class="odfLiEnd"/> </p></li><li><p class="P13" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0cm">5.</span>Power on the RPI by plugging in the micro USB cable. Then plug in the Ethernet cable into the RPI and your laptop.<span class="odfLiEnd"/> </p></li><li><p class="P13" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0cm">6.</span>Login to the RPI by clicking under the “General” folder the shortcut “RPI-Login”. This will launch PuTTy.<span class="odfLiEnd"/> </p></li></ol><p class="P4"> </p><p class="P2">Part 1: Learning Linux Command Line Interface (CLI)</p><p class="P11">Note: Right clicking inside the PuTTy terminal is how to Paste or the replacement for "Control + V".</p><p class="P4">This section covers some basic commands that will be very handy in using any Linux-based operating system. In general, since the Linux kernel inherits alot from the Unix kernel and many modern operating systems derive from both of these kernels, these commands are commonplace (in some form) in every operating system today, such as Windows PowerShell. </p><p class="P11">Note: These commands are being run in a terminal program, which is a running process that executes entered bash commands and also stores environmental variables, which can be used by the executing commands. </p><p class="P4"> </p><p class="P4">First open WinSCP → “New Site” → File protocal: SFTP → Host name “raspberrypi.mshome.net” → User name: “pi” → password “raspberrypi”.</p><p class="P4">Now copy the folder “ToRPI” from your laptop to /home/pi/Desktop by clicking and dragging the folder.</p><p class="P4"> </p><p class="P4">Now try some basic commands in the PuTTY terminal.</p><p class="P4">List Everything:</p><p class="P8">ls -a</p><p class="P4">Folders or files that start with "." are hidden, which is a naming convention meant to used in the background by processes without any direct user interaction.</p><p class="P4">List only some items:</p><p class="P8">ls</p><p class="P4">ls actually is the same as:</p><p class="P8">ls .</p><p class="P1">where "." refers to your 'working' or current directory.</p><p class="P1">".." refers to some directory above your working directory.</p><p class="P1">Change directory:</p><p class="P8">cd ~/Desktop</p><p class="P1">"~/Desktop" is an absolute path, where "./Desktop" is an equivalent relative path, which will resolve when your working directory is "~".</p><p class="P1">"cd .." says go up one directory level</p><p class="P10">ProTip: TAB hotkey. Hitting the tab key while typing out commands or paths will ask the OS to try to autocomplete what you are typing out. Go to the "Desktop/projects" directory and type out "cd C" then hit tab. The ongoing command should resolve to "cd Class", because there is more than one directory that begins with "Class". Hitting double tab lists the remaining possible resolutions.</p><p class="P4"> </p><p class="P4">Multiple commands can be run with a single paste, as with below:</p><p class="P8">cd ToRPI</p><p class="P8">cd src</p><p class="P8"> </p><p class="P1"><span class="T1">There just needs to be an invisible ASCII characters "\r\n" present in the copied text, which is the same result as hitting the 'ENTER' key.</span></p><p class="P4">Now compile the program with: </p><p class="P8">g++ -o summon-the-devil-himself thedevil.cpp</p><p class="P4">Run the program using </p><p class="P8">./summon-the-devil-himself; echo $?</p><p class="P4">Now lets look inside the soulcontract using</p><p class="P8">nano soulcontract.txt</p><p class="P4">Exit nano (using control + X) and defy the devil himself by deleting the contract with</p><p class="P8">rm soulcontract.txt</p><p class="P4">Take a look inside the devil program with</p><p class="P8">nano thedevil.cpp</p><p class="P4">If you want to gain more knowledge about a particular command without summoning the devil, use </p><p class="P8">man ls</p><p class="P4">for the ls command, and simply replace ls with something else to learn about that.</p><p class="P4">To destroy everything you have accomplished thus far:</p><p class="P8">rm -r ../src</p><p class="P4"> </p><p class="P2">Part 2: Install Stuff on Linux</p><p class="P4">Method 1:</p><p class="P8">sudo apt-get update</p><p class="P8">sudo apt-get upgrade</p><p class="P8">sudo apt-get install *dependcies*</p><p class="P8">sudo apt-get install *package*</p><p class="P4">However using this method is not considered hardcore, so lets take it to the next level.</p><p class="P7">sudo apt-get install libdbus-1-dev libdbus-glib-1-dev libglib2.0-dev libical-dev libreadline-dev libudev-dev libusb-dev</p><p class="P7">cd /usr/src</p><p class="P7">sudo wget https://www.kernel.org/pub/linux/bluetooth/bluez-5.32.tar.xz</p><p class="P7">sudo tar xvf bluez-5.32.tar.xz</p><p class="P7"> </p><p class="Standard"> </p><p class="P7">cd bluez-5.32</p><p class="P7">sudo ./configure --disable-systemd</p><p class="P7">sudo make</p><p class="Standard">Wait 10 years, just kidding. "Control + C" will send a signal to kill the executing command.</p><p class="Standard">If the make command did complete without interruption in a timely manner, run</p><p class="P7">sudo make install</p><p class="P4">To test if something is working:</p><p class="P9">sudo hcitool lescan</p><p class="P4"> </p><p class="P2">Part 3: Remote development using Netbeans and C/C++</p><p class="P4">Start Netbeans 8.1.</p><p class="P4"> </p><p class="P4">Create a sample project by going File → New Project → Samples → C/C++ → Multi Processing Application.</p><p class="P4"> </p><p class="P4">Now setup remote development by going to <a href="https://netbeans.org/kb/docs/cnd/remotedev-tutorial.html" class="Internet_20_link">here</a>.</p><p class="P4"> </p><p class="P4">Right click on the project → Properties → Run → Run command → … → Replace with</p><p class="P8"><span class="T2">"${OUTPUT_PATH}" hello hi yes whats up no yes maybe cool wow holy how yup real fast gotta run sweet nice welp DOOM SHALL COME unlikely perhaps sortof</span></p><p class="P4">Then hit OK.</p><p class="P4">Now run build/run the project by clicking the Green Arrow (or hit F6).</p><p class="P4">Why is this program special? It is printing each argument using a seperate child process with the “fork()” function. </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"/><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p></body></html>